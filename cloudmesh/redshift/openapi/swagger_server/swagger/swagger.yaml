---
swagger: "2.0"
info:
  description: "This is an OpenAPI for Amazon RedShift"
  version: "1.0.0"
  title: "AWS RedShift"
  termsOfService: "IU <todo>"
  contact:
    email: "joshish@iu.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/cloudmesh/redshift/v1"
tags:
- name: "cluster"
  description: "RedShift Clusters"
  externalDocs:
    description: "Get information and operate on Clusters"
    url: "http://swagger.io"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /clusters:
    get:
      tags:
      - "cluster"
      summary: "Describe all clusters"
      description: "Detailed description of all cluster attributes"
      operationId: "cloudmesh_redshift_provider_describe_clusters"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successfully listed clusters"
          schema:
            $ref: "#/definitions/RedShiftCluster"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}:
    get:
      tags:
      - "cluster"
      summary: "Describe cluster by ID"
      description: "Returns a single cluster description"
      operationId: "cloudmesh_redshift_provider_describe_cluster"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster"
        required: true
        type: "string"
      responses:
        200:
          description: "successfully listed cluster"
          schema:
            $ref: "#/definitions/RedShiftCluster"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Cluster not found"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
    post:
      tags:
      - "cluster"
      summary: "Creates a cluster"
      description: ""
      operationId: "cloudmesh_redshift_provider_create_multi_node_cluster"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster to be created"
        required: true
        type: "string"
      - name: "dbName"
        in: "query"
        description: "Name of the DB"
        required: true
        type: "string"
      - name: "masterUserName"
        in: "query"
        description: "Master user name"
        required: true
        type: "string"
      - name: "passWord"
        in: "query"
        description: "Master user password"
        required: true
        type: "string"
      - name: "nodeType"
        in: "query"
        description: "Type of the node of the cluster"
        required: false
        type: "string"
        default: "dc2.large"
      - name: "clusterType"
        in: "query"
        description: "Type of the cluster"
        required: false
        type: "string"
        default: "multi-node"
      - name: "nodeCount"
        in: "query"
        description: "Count of nodes in cluster"
        required: false
        type: "number"
        default: 2.0
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
    delete:
      tags:
      - "cluster"
      summary: "Deletes a cluster"
      description: "Delete a cluster"
      operationId: "cloudmesh_redshift_provider_delete_cluster"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Cluster not found"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/resize:
    patch:
      tags:
      - "cluster"
      summary: "Increases cluster nodes"
      description: ""
      operationId: "cloudmesh_redshift_provider_resize_cluster"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster to resize"
        required: true
        type: "string"
      - name: "clusterType"
        in: "query"
        description: "Type of the cluster"
        required: false
        type: "string"
        default: "multi-node"
      - name: "nodeCount"
        in: "query"
        description: "Count of nodes to resize cluster to"
        required: false
        type: "number"
        default: 2.0
      - name: "nodeType"
        in: "query"
        description: "Type of nodes "
        required: false
        type: "string"
        default: "dc2.large"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/changenodetype:
    patch:
      tags:
      - "cluster"
      summary: "Change  node type"
      description: ""
      operationId: "cloudmesh_redshift_provider_change_node_type"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster to update"
        required: true
        type: "string"
      - name: "clusterType"
        in: "query"
        description: "Type of the cluster"
        required: true
        type: "string"
      - name: "nodeType"
        in: "query"
        description: "Type of the node"
        required: false
        type: "string"
        default: "dc2.large"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/rename:
    patch:
      tags:
      - "cluster"
      summary: "Rename cluster"
      description: "Rename the cluster"
      operationId: "cloudmesh_redshift_provider_rename_cluster"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster to rename"
        required: true
        type: "string"
      - name: "newId"
        in: "query"
        description: "New ID for the cluster"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/changepassword:
    patch:
      tags:
      - "cluster"
      summary: "Change master password"
      description: "Change the password for the cluster"
      operationId: "cloudmesh_redshift_provider_chg_password"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster to update"
        required: true
        type: "string"
      - name: "newPass"
        in: "query"
        description: "New Password"
        required: true
        type: "string"
      responses:
        200:
          description: "successfully change password"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/allowaccess:
    patch:
      tags:
      - "cluster"
      summary: "Allow external access to cluster"
      description: "Allow external programs (eg Python) access to the Redshift cluster\
        \ for queries"
      operationId: "cloudmesh_redshift_provider_allow_access"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster to allow access to"
        required: true
        type: "string"
      responses:
        200:
          description: "successfully allowed access"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/runDDL:
    patch:
      tags:
      - "cluster"
      summary: "Runs DDL on cluster"
      description: "Run SQL Statements like CREATE TABLE, ALTER TABLE, DROP TABLE\
        \ on the database"
      operationId: "cloudmesh_redshift_provider_runddl"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster "
        required: true
        type: "string"
      - name: "dbName"
        in: "query"
        description: "DB Name"
        required: true
        type: "string"
      - name: "host"
        in: "query"
        description: "Host name"
        required: true
        type: "string"
      - name: "port"
        in: "query"
        description: "Port number"
        required: false
        type: "integer"
        default: 5439
      - name: "userName"
        in: "query"
        description: "User name"
        required: true
        type: "string"
      - name: "passWord"
        in: "query"
        description: "Password"
        required: true
        type: "string"
      - name: "sql_file_contents"
        in: "query"
        description: "Contents of an SQL file"
        required: true
        type: "string"
        format: "base64"
      responses:
        200:
          description: "successfully ran the DDL statements"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/runDML:
    patch:
      tags:
      - "cluster"
      summary: "Runs DML on cluster"
      description: "Run SQL Statements like INSERT, UPDATE, DELETE for data in the\
        \ database"
      operationId: "cloudmesh_redshift_provider_rundml"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster "
        required: true
        type: "string"
      - name: "dbName"
        in: "query"
        description: "DB Name"
        required: true
        type: "string"
      - name: "host"
        in: "query"
        description: "Host name"
        required: true
        type: "string"
      - name: "port"
        in: "query"
        description: "Port number"
        required: false
        type: "integer"
        default: 5439
      - name: "userName"
        in: "query"
        description: "User name"
        required: true
        type: "string"
      - name: "passWord"
        in: "query"
        description: "Password"
        required: true
        type: "string"
      - name: "sql_file_contents"
        in: "query"
        description: "Contents of an SQL file"
        required: true
        type: "string"
        format: "base64"
      responses:
        200:
          description: "successfully ran the DML file"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
  /cluster/{clusterId}/runQuery:
    patch:
      tags:
      - "cluster"
      summary: "Runs a query on the cluster"
      description: "Run SQL SELECT Statement"
      operationId: "cloudmesh_redshift_provider_runquery"
      produces:
      - "application/json"
      parameters:
      - name: "clusterId"
        in: "path"
        description: "ID of cluster "
        required: true
        type: "string"
      - name: "dbName"
        in: "query"
        description: "DB Name"
        required: true
        type: "string"
      - name: "host"
        in: "query"
        description: "Host name"
        required: true
        type: "string"
      - name: "port"
        in: "query"
        description: "Port number"
        required: false
        type: "integer"
        default: 5439
      - name: "userName"
        in: "query"
        description: "User name"
        required: true
        type: "string"
      - name: "passWord"
        in: "query"
        description: "Password"
        required: true
        type: "string"
      - name: "queryText"
        in: "query"
        description: "SQL query"
        required: true
        type: "string"
        format: "base64"
      responses:
        200:
          description: "successfully run the query"
          schema:
            $ref: "#/definitions/RedShiftCluster"
      x-swagger-router-controller: "swagger_server.controllers.cluster_controller"
definitions:
  RedShiftCluster:
    type: "object"
    required:
    - "clusterId"
    properties:
      clusterId:
        type: "string"
    example:
      clusterId: "clusterId"
